.container
  %h2= @building.address

  .row
    .col-md-6
      #granularities.btn-group-vertical{ data: { toggle: "buttons"} }
        %label.btn.btn-primary

          = radio_button_tag "granularity", "yearly", ["yearly", nil].include?(@granularity), { "data-target" => ".yearly-data", "data-toggle" => "tab" }
          Yearly
        %label.btn.btn-primary
          = radio_button_tag "granularity", "quarterly", @granularity == "quarterly", { "data-target" => ".quarterly-data", "data-toggle" => "tab" }
          Quarterly
        %label.btn.btn-primary

          = radio_button_tag "granularity", "monthly", @granularity == "monthly", { "data-target" => ".monthly-data", "data-toggle" => "tab" }
          Monthly
    .col-md-6
      %em pseudo graphs go here
  .row
    .col-md-2
      .form-group
        = label_tag :year, "Select Year"
    .col-md-2
      .form-group
        = text_field_tag :year, @year, class: "form-control", placeholder: "Year"
  .row.select-profile
    .col-md-2
      .form-group
        = select_tag :electricity_profile_type, options_for_select(BuildingEnergyProfile::ELECTRICITY_TYPES), class: "form-control"
        = label_tag :electricity_profile_type, "Select electricity consumption / export"
    .col-md-2
      .form-group
        = select_tag :electricity_profile_accuracy, options_for_select(["metered", "modelled", "certified", "estimated"]), class: "form-control"
        = label_tag :electricity_profile_accuracy, "Select accuracy"
    .col-md-2
      .form-group
        = select_tag :fossil_fuel_profile_type, options_for_select(BuildingEnergyProfile::FOSSIL_FUEL_TYPES),  class: "form-control"
        = label_tag :fossil_fuel_profile_type, "Select fossil fuel"
    .col-md-2
      .form-group
        = select_tag :fossil_fuel_profile_accuracy, options_for_select(["metered", "modelled", "certified", "estimated"]), class: "form-control"
        = label_tag :fossil_fuel_profile_accuracy, "Select accuracy"

  .row
    -# FIXME: we could possibly split this up in the controller...
    -#   although it's presentation, not control logic
    .col-md-4.electricity_profiles
      - @building_profiles.select(&:electricity?).each do |profile|
        = render profile, locals: { energy_profile: profile }
    .col-md-4.fossil_fuel_profiles
      - @building_profiles.select(&:fossil_fuel?).each do |profile|
        = render profile, locals: { energy_profile: profile }

:javascript
  var saveDirtyForms = function() {
    $('form.dirty').each(function() {
      //$('#confirm-modal').modal({ backdrop: 'static', keyboard: false});
      log("Saving form...");
      $(this).submit();
    });
  }

  var periodicSave = function(period) {
    setInterval(saveDirtyForms, period);
  }

  var setDirty = function(el) {
    // set the current form as dirty
    var thisForm = $(el).parents('form')
    log("Marking form as dirty");
    thisForm.addClass('dirty');
  }

  var selectEnergyProfileForm = function(el, scope) {
    var selectedForm = $('form input[name="building_energy_profile[profile_type]"][value="' + $(el).val() +'"]').parents('form');
    log("Hide all " + scope + " forms");
    $(scope + ' form').hide();

    //var granularity = $(selectedForm).find('input[name="building_energy_profile[granularity]"]').val();
    //log("Setting global granularity element to " + granularity);
    //$('#granularities input[name=granularity][value="' +
    //  + granularity +
    //  '"]').click();

    log("Showing the selected " + scope + " form");
    $(selectedForm).show();
  }

  var selectFossilFuelProfileForm = function(el) {
    selectEnergyProfileForm(el, '.fossil_fuel_profiles');
  }
  var selectElectricityProfileForm = function(el) {
    selectEnergyProfileForm(el, '.electricity_profiles');
  }

  jQuery(document).ready(function($) {
    // page setup
    //
    // clicking a data granularity button will show the associated
    //   tab with the proper input fields
    $('#granularities .btn').on('click', function() {
      var granularity = $(this).find('input').val();
      $(this).find('input').tab('show');
      $('form input[name="building_energy_profile[granularity]"]').val(granularity);
    });

    // changing the value of the year text field will set the value of the
    //   corresponding hidden field for the forms.
    $('#year').on('change', function() {
      var year = $(this).val();
      $('form input[name="building_energy_profile[year]"]').val(year);
    });

    // changing the value of the accuracy select fields will set the value
    //   of the corresponding hidden field for the forms.
    $('#electricity_profile_accuracy').on('change', function() {
      var accuracy = $(this).val();
      $('.electricity_profiles form input[name="building_energy_profile[profile_accuracy]"]').val(accuracy);
    });
    $('#fossil_fuel_profile_accuracy').on('change', function() {
      var accuracy = $(this).val();
      $('.fossil_fuel_profiles form input[name="building_energy_profile[profile_accuracy]"]').val(accuracy);
    });

    // keep track of changes - changing any of the text input fields
    //   in the forms will set the form as dirty
    $('form input[type=text]').on('keypress', function() {
      setDirty(this);
    });

    // show / hide the active forms
    $('select[name=electricity_profile_type').on('change', function() {
      selectElectricityProfileForm(this);
    });
    $('select[name=fossil_fuel_profile_type').on('change', function() {
      selectFossilFuelProfileForm(this);
    });

    // handle remote form save.
    //   for now, all activity is logged on the console
    $('form.new_building_energy_profile').on('ajax:success', function(e, data, status, xhr) {
      var thisForm = $('form input[name="building_energy_profile[profile_type]"][value="' + data["profile_type"] + '"]').parents('form');
      log("Energy Profile " + data["profile_type"]);
      thisForm.removeClass('dirty');
      log("Marking this form as clean");
    }).bind('ajax:error', function(e,xhr,status,error) {
      log("Received ajax error");
    });

    // by default, select 'yearly' granularity
    var selectedGranularity = $('input[name=granularity]:checked');
    if (selectedGranularity.length == 0) {
      $('#granularities .btn:first').click();
    } else {
      selectedGranularity.parents('label').click();
    }


    // select the first electricity profile
    selectElectricityProfileForm($('select[name=electricity_profile_type]')[0]);
    // select the first fossil fuel profile
    selectFossilFuelProfileForm($('select[name=fossil_fuel_profile_type]')[0]);

    // setup periodic save
    periodicSave(2000);
  });

