.container
  %h1 Enter data for a group of buildings

  = form_for @building_group do |f|
    .col-md-4
      = f.label :name, class: "sr-only"
      = f.text_field :name, class: "form-control", placeholder: "Suitable name for group"
    .col-md-2
      = f.label :postcode, class: "sr-only"
      = f.text_field :postcode, class: "form-control", placeholder: "postcode"
    .col-md-2
      = f.label :city, class: "sr-only"
      = f.text_field :city, class: "form-control", placeholder: "city"
    .col-md-2
      = f.label :year, class: "sr-only"
      = f.text_field :year, class: "form-control", placeholder: "year"
    .col-md-2.checkbox
      = f.label :age_groups do
        = f.check_box :age_groups
        Can the buildings be broken down by age groups
    .col-md-6
      #categories.btn-group{"data-toggle" => "buttons" }
        %label.btn.btn-primary
          = f.radio_button "category", "all", { "data-target" => "#all-sectors", "data-toggle" => "tab" }
          Whole
        %label.btn.btn-primary
          = f.radio_button "category", "residential", { "data-target" => "#residential-sector", "data-toggle" => "tab" }
          Residential
        %label.btn.btn-primary
          = f.radio_button "category", "non-residential", { "data-target" => "#non-residential-sector", "data-toggle" => "tab" }
          Non Residential

      .tab-content
        .tab-pane#all-sectors
          %p
            This group includes buildings from both residential and non residential categories.
        .tab-pane#residential-sector
          %p
            Please select a building category if applicable:
          %ul.list-unstyled
            - BuildingCategory.with_sector("residential").each do |cat|
              %li
                = f.radio_button "category", cat.slug
                = f.label "category", cat.description
        .tab-pane#non-residential-sector
          %p
            Please select a building category if applicable:
          %ul.list-unstyled
            - BuildingCategory.with_sector("non-residential").each do |cat|
              %li
                = f.radio_button "category", cat.slug
                = f.label "category", cat.description

    .col-md-3
      .form-group
        = f.label :total_area, class:"sr-only"
        = f.text_field :total_area, class: "form-control", placeholder: "total area"

      .form-group
        = f.label :total_occupancy, class: "sr-only"
        = f.text_field :total_occupancy, class: "form-control", placeholder: "total occupancy"

    .col-md-3
      .form-group
        = f.label :area_accuracy, class: "sr-only"
        = f.select :area_accuracy, options_for_select(["metered", "modelled", "certified", "estimated"]), {}, { class: "form-control" }

      .form-group
        = f.label :occupancy_accuracy, class: "sr-only"
        = f.select :occupancy_accuracy, options_for_select(["metered", "modelled", "certified", "estimated"]), {}, { class: "form-control" }


    = f.fields_for :group_energy_profiles, @building_group.group_energy_profiles do |p|
      .col-md-12.age-group{ id: (p.object.age_group == "all" ? "all-age-groups" : "") }
        .col-md-2
          = p.hidden_field :age_group
          = p.object.age_group == "all" ? "" : p.object.age_group
        - ["imported_electricity_consumption", "generated_electricity_consumption", "exported_electricity", "fossil_1_consumption", "fossil_2_consumption"].each do |energy_detail|
          .col-md-2
            .col-md-12
              = p.label energy_detail, energy_detail.humanize
              = p.text_field energy_detail, class: "form-control"
              = p.select "#{energy_detail}_unit", options_for_select(["kWh", "MWh", "GWh"]), {}, { class: "form-control input-sm" }
              = p.select "#{energy_detail}_accuracy", options_for_select(["metered", "modelled", "certified", "estimated"]), {}, { class: "form-control input-sm"}
              - if ["fossil_1_consumption", "fossil_2_consumption"].include? energy_detail
                = p.select "#{energy_detail}_type", options_for_select(BuildingEnergyProfile::FOSSIL_FUEL_TYPES), {}, { class: "form-control input-sm" }

    .col-md-2
      = f.submit "Save", class: "btn btn-primary"

:javascript
  var showAgeGroups = function() {
    var allRow = $('#all-age-groups');
    var groupRows = $('.age-group');

    var showAllRow = function() {
      groupRows.hide();
      allRow.show();
    }

    var showGroupRows = function() {
      groupRows.show();
      allRow.hide();
    }

    if ($("input[name='building_group[age_groups]']:checked").val() == 1) {
      showGroupRows();
    } else {
      showAllRow();
    }

  };

  jQuery(document).ready(function($) {
    // page setup
    //
    // clicking on a 'sector' button will show the associated
    // tab with the categories
    $('#categories .btn').on('click', function() {
      $(this).find('input').tab('show');
    });

    // by default, select 'whole' sector
    var selectedCategory = $('input[name="building_group[category]"]:checked');
    if(selectedCategory.length == 0) {
      $('#categories .btn:first').click();
    } else {
      var categoryLabel = selectedCategory.val();

      if ((categoryLabel == "all") || (categoryLabel == "residential") || (categoryLabel == "non-residential")) {
        selectedCategory.tab('show');
        selectedCategory.parents('label').addClass('active');
      } else {
        var paneId = selectedCategory.parents('.tab-pane').attr('id');
        log("Looking for tab that triggers " + paneId);
        $('input[name="building_group[category]"][data-target="#' + paneId + '"]').
          tab('show').
          parents('label').addClass('active');
      }
    }

    // make sure the right tab is chosen by default


    // checking 'group can be broken down by age group' should show the age groups
    showAgeGroups();

    $("input[name='building_group[age_groups]']").on('change', showAgeGroups);
  });
